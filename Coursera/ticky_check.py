#!/usr/bin/env python3
import csv
import re
import operator

#Write a script to generate two different reports based on the ranking of errors generated by the system and the user usage statistics for the service. 

#initialize two dictionaries: one for the number of different error messages and another to count the number of entries for each user (splitting between INFO and ERROR).
per_user = {}
error = {}

file="syslog.log"

# file="c:/Users/zsh/Desktop/pp/syslog.log"

#parse through each log entry in the syslog.log file by iterating over the file
def parse(file):
    with open(file, "r") as f:
        for row in f:
            if re.search(r"ticky: INFO (.+) \[", row):
                username = re.search(r"\((.+)\)", row).group(1)
                if username in per_user.keys():
                    if "INFO" in per_user.keys():
                        per_user[username]["INFO"] += 1
                    else:
                        per_user[username] = {}
                        per_user[username]["INFO"] = 1
                else:
                    per_user[username] = {}
                    per_user[username]["INFO"] = 1
            
            if re.search(r"ticky: ERROR (.+) \(", row):
                username = re.search(r"\((.+)\)", row).group(1)
                error_msg = re.search(r"ticky: ERROR (.+) \(", row).group(1)
                if error_msg in error.keys():
                    error[error_msg] += 1
                else:
                    error[error_msg] = 1
                
                # update per_user
                if username in per_user.keys():
                    if "ERROR" in per_user[username].keys():
                        per_user[username]["ERROR"] += 1
                    else:
                        per_user[username]["ERROR"] = 1
                else:
                    per_user[username] = {}
                    per_user[username]["ERROR"] = 1
        f.close()

    #The error dictionary should be sorted by the number of errors from most common to least common.
    sorted_error = sorted(error.items(), key=lambda kv:(kv[1], kv[0]), reverse=True)

    #The user dictionary should be sorted by username.
    sorted_per_user = sorted(per_user.keys())
    
    #After sorting these dictionaries, store them in two different files: error_message.csv and user_statistics.csv.
    with open("error_message.csv", "w") as f:
        #Insert column names as ("Error", "Count") at the zero index position of the sorted error dictionary
        csvw = csv.writer(f, delimiter=',',quotechar='|', quoting=csv.QUOTE_MINIMAL)
        csvw.writerow(["Error", "Count"])
        for item in sorted_error:
            csvw.writerow([item[0], item[1]])
        

    with open("user_statistics.csv", "w") as f:
        #insert column names as ("Username", "INFO", "ERROR") at the zero index position of the sorted per_user dictionary
        csvw = csv.writer(f, delimiter=',',quotechar='|', quoting=csv.QUOTE_MINIMAL)
        csvw.writerow(["Username", "INFO", "ERROR"])
        for key in sorted_per_user:
            num_info = 0
            num_error = 0
            if "INFO" in per_user[key]:
                num_info = per_user[key]["INFO"]
            if "ERROR" in per_user[key]:
                num_error = per_user[key]["ERROR"]
            csvw.writerow([key, num_info, num_error])
        f.close()

parse(file)